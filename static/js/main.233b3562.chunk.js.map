{"version":3,"sources":["FieldLogick.js","Field.js","index.js"],"names":["changeFlags","state","map","item","index","array","num","muveble","mixFields","fields","arr","sort","Math","random","Ev","useState","x","push","initArray","field","setField","remember","setRemember","win","setWin","dragStartHandler","e","r","target","style","background","dragEndHandler","muveBlock","useEffect","checkFlag","every","className","onClick","console","log","onDrop","n","preventDefault","dropHandler","onDragOver","dragOverhandler","onDragLeave","dragLiveHandler","draggable","onDragStart","onDragEnd","cursor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.233b3562.chunk.js","sourcesContent":["\nexport const initArray = () => {\n    const arr = []\n    for(let x = 1; x < 17; x++) {\n        arr.push({num: x, muveble: false})\n    }\n    return arr\n}\n\nexport function changeFlags (state) {\n\n    const arr = state.map((item, index, array) => {\n        \n        if(  array[index + 1] && \n             array[index+ 1].num ===16 &&\n             index !== 3 &&\n             index !== 7 &&\n             index !== 11 &&\n             index !== 15\n         ){\n            return {...item, muveble: true}\n            \n         } else if(\n             array[index - 1] &&\n             array[index - 1].num ===16 &&\n             index !== 4 &&\n             index !== 8 &&\n             index !== 12 &&\n             index !== 16\n         ){\n             return {...item, muveble: true}\n         } else if (index < 12 && array[index + 4].num === 16) {\n             return {...item, muveble: true}\n         }  else if (index > 3 && array[index - 4].num === 16) {\n             return {...item, muveble: true}\n         } else {\n         return {...item, muveble: false}\n         }\n     })\n     return arr\n }\n\nexport const mixFields = fields => {\n    const arr = fields.sort(() => Math.random() - 0.5)\n    const arrNew = [...arr]\n    return arrNew\n}\n\nexport const checkResult = fields => {\n    return fields.every((field, index) => {\n        if (field.num === index +1) { return true} \n        else return false\n    })\n}","import React, {useState, useEffect } from 'react'\n\nimport './Field.css'\nimport { initArray, changeFlags, mixFields, checkResult } from './FieldLogick'\n\nexport default function Ev() {\n    const [field, setField] = useState(initArray())\n    const [remember, setRemember] = useState({num: 16, muveble: false})\n    const [win, setWin] = useState(false)\n    \n    // DND event handlers \n    function handleStart() {\n        setField(state => mixFields(state))\n        setField(state => changeFlags(state))\n        setWin(false)\n    }\n    function dragStartHandler(e, r) {\n        setRemember(r)\n        e.target.style.background = '#005f73'\n    }\n    function dragLiveHandler(e) {\n        e.target.style.background = 'white'\n    }\n    function dragEndHandler(e) {\n         e.target.style.background = '#94d2bd'\n    }\n    function dragOverhandler(e) {\n        e.preventDefault()\n        e.target.style.background = '#ee9b00'\n    }\n    function dropHandler(e, n) {\n        e.preventDefault()\n        setField(state => muveBlock(state))\n        setField(state => changeFlags(state))\n    }\n    // main logick\n    const muveBlock = state => (state.map((item) => {\n        if (item.num === 16) {\n            return remember\n        } else if (item.num === remember.num) {\n            return {num: 16, muveble: false}\n        }\n        else {\n            return item\n        }\n    }))\n    \n    useEffect(() => {\n        setField(state => mixFields(state))\n        setField(state => changeFlags(state))\n        \n    }, [])\n    // check result game\n    useEffect(() => {\n        let checkFlag = checkResult(field)\n        if (checkFlag) {\n            setWin(checkFlag)\n        }\n\n    }, [field])\n\n    \n    return (\n    <div className=\"wrapper\">\n        <div className=\"button-wrapper\"> \n            <button onClick={handleStart}>restart</button>\n            {console.log(\"div\")}\n        </div>\n        <div className=\"fields\">\n           {field.map((item) => (\n               <>\n               \n               {item.num === 16 ? \n               <div \n                    className=\"field-item\"\n                    key={item.num}\n                    onDrop={e=> dropHandler(e, item.num)}\n                    onDragOver={e => dragOverhandler(e)}\n                    onDragLeave={e => dragLiveHandler(e)}\n               >\n                   {item.num < 16 ? <div \n                                        className=\"item\"\n                                        draggable={item.muveble}\n                                        onDragStart={e => dragStartHandler(e, item)}\n                                        onDragEnd={e => dragEndHandler(e)}\n                                        style={item.muveble ? {background: '#94d2bd', cursor: 'pointer'} : {background: '#0a9396'}}\n                                    >{item.num}</div> : null }\n               </div> :\n               <div \n                    className=\"field-item\"\n                    key={item.num}\n                >\n                    {item.num < 16 ? <div \n                                        className=\"item\"\n                                        draggable={item.muveble}\n                                        onDragStart={e => dragStartHandler(e, item)}\n                                        onDragEnd={e => dragEndHandler(e)}\n                                        style={item.muveble ? {background: '#94d2bd', cursor: 'pointer'} : {background: '#0a9396'}}\n                                    >{item.num}</div> : null }\n                </div> \n                }\n                </>\n           ))} \n        </div>\n        <div>{\n            win ? <h2>You Win</h2> : <h2>Move tiles in grid to order them from 1 to 15. To move a tile you can drag and drop of it</h2>\n        }</div>\n    </div>\n    )\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport Field from './Field'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Field />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}