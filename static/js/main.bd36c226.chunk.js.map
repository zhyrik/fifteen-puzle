{"version":3,"sources":["FieldLogick.js","PuzleInar.js","Puzle.js","Field.js","index.js"],"names":["changeFlags","state","map","item","index","array","num","muveble","mixFields","fields","arr","sort","Math","random","PuzleInar","dragStartHandler","className","draggable","onDragStart","e","onDragEnd","target","style","background","dragEndHandler","cursor","Puzle","preventDefault","nextProps","nextState","this","props","dropHandler","console","log","onDrop","onDragOver","dragOverhandler","onDragLeave","dragLiveHandler","Component","Ev","useState","x","push","initArray","field","setField","remember","setRemember","win","setWin","r","handleMuvebleFlag","useEffect","checkFlag","every","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bd36c226.chunk.js","sourcesContent":["\nexport const initArray = () => {\n    const arr = []\n    for(let x = 1; x < 17; x++) {\n        arr.push({num: x, muveble: false})\n    }\n    return arr\n}\n\nexport function changeFlags (state) {\n\n    const arr = state.map((item, index, array) => {\n        \n        if(  array[index + 1] && \n             array[index+ 1].num ===16 &&\n             index !== 3 &&\n             index !== 7 &&\n             index !== 11 &&\n             index !== 15\n         ){\n            return {...item, muveble: true}\n            \n         } else if(\n             array[index - 1] &&\n             array[index - 1].num ===16 &&\n             index !== 4 &&\n             index !== 8 &&\n             index !== 12 &&\n             index !== 16\n         ){\n             return {...item, muveble: true}\n         } else if (index < 12 && array[index + 4].num === 16) {\n             return {...item, muveble: true}\n         }  else if (index > 3 && array[index - 4].num === 16) {\n             return {...item, muveble: true}\n         } else {\n         return {...item, muveble: false}\n         }\n     })\n     return arr\n }\n\nexport const mixFields = fields => {\n    const arr = fields.sort(() => Math.random() - 0.5)\n    const arrNew = [...arr]\n    return arrNew\n}\n\nexport const checkResult = fields => {\n    return fields.every((field, index) => {\n        if (field.num === index +1) { return true} \n        else return false\n    })\n}","import React from 'react'\n\nfunction PuzleInar({item, dragStartHandler }) {\n\n    function dragEndHandler(e) {\n        e.target.style.background = '#94d2bd'\n    }\n    \n    return (\n        <div \n            className=\"item\"\n            draggable={item.muveble}\n            onDragStart={e => dragStartHandler(e, item)}\n            onDragEnd={e => dragEndHandler(e)}\n            style={item.muveble ? {background: '#94d2bd', cursor: 'pointer'} : {background: '#0a9396'}}\n        >{item.num}</div>\n    )\n}\n\nexport default PuzleInar\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport PuzleInar from './PuzleInar'\n\nexport class Puzle extends Component {\n\n    static propTypes = {\n        item: PropTypes.object.isRequired,\n        dropHandler: PropTypes.func.isRequired,\n        dragStartHandler: PropTypes.func.isRequired\n    }\n    \n\n    dragLiveHandler (e) {\n        e.target.style.background = 'white'\n    }\n\n    dragOverhandler(e) {\n        e.preventDefault()\n        e.target.style.background = '#ee9b00'\n    }\n    shouldComponentUpdate(nextProps, nextState) {\n        // render oprimization\n        if( nextProps.item.num === 16 || \n            this.props.item.num ===16 || \n            this.props.item.muveble || \n            nextProps.item.muveble ||\n            nextProps.item.num !== this.props.item.num\n        ){\n            return true\n        } else {\n            return false\n        }\n    }\n\n    render() {\n        const {item, dropHandler, dragStartHandler} = this.props\n        console.log('render', item.num)\n        return (\n            <>\n                {item.num === 16 ? \n                   <div \n                        className=\"field-item\"\n                        key={item.num}\n                        onDrop={e=> dropHandler(e, item.num)}\n                        onDragOver={e => this.dragOverhandler(e)}\n                        onDragLeave={e => this.dragLiveHandler(e)}\n                   >\n                       {item.num < 16 ? <PuzleInar item={item} dragStartHandler={dragStartHandler}/> : null }\n                   </div> :\n                   <div \n                        className=\"field-item\"\n                        key={item.num}\n                    >\n                        {item.num < 16 ? <PuzleInar item={item} dragStartHandler={dragStartHandler}/>: null }\n                    </div> \n                    }\n            </>\n        )\n    }\n}\n\nexport default Puzle\n","import React, {useState, useEffect } from 'react'\n\nimport './Field.css'\nimport { initArray, changeFlags, mixFields, checkResult } from './FieldLogick'\nimport Puzle from './Puzle'\n\nexport default function Ev() {\n    const [field, setField] = useState(initArray())\n    const [remember, setRemember] = useState({num: 16, muveble: false})\n    const [win, setWin] = useState(false)\n    \n    // DND event handlers \n    function handleStart() {\n        setField(state => mixFields(state))\n        setField(state => changeFlags(state))\n        setWin(false)\n    }\n    function dragStartHandler(e, r) {\n        setRemember(r)\n        e.target.style.background = '#005f73'\n    }\n    function dropHandler(e) {\n        e.preventDefault()\n        setField(state => handleMuvebleFlag(state))\n        setField(state => changeFlags(state))\n    }\n    \n    const handleMuvebleFlag = state => (state.map((item) => {\n        if (item.num === 16) {\n            return remember\n        } else if (item.num === remember.num) {\n            return {num: 16, muveble: false}\n        }\n        else {\n            return item\n        }\n    }))\n    \n    useEffect(() => {\n        setField(state => mixFields(state))\n        setField(state => changeFlags(state))\n        \n    }, [])\n    // check result game\n    useEffect(() => {\n        let checkFlag = checkResult(field)\n        if (checkFlag) {\n            setWin(checkFlag)\n        }\n\n    }, [field])\n\n    \n    return (\n    <div className=\"wrapper\">\n        <div className=\"button-wrapper\"> \n            <button onClick={handleStart}>restart</button>\n        </div>\n        <div className=\"fields\">\n           {field.map((item) => (\n               <Puzle item={item} dropHandler={dropHandler} dragStartHandler={dragStartHandler}/>\n           ))} \n        </div>\n        <div>{\n            win ? <h2>You Win</h2> : <h2>Move tiles in grid to order them from 1 to 15. To move a tile you can drag and drop of it</h2>\n        }</div>\n    </div>\n    )\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport Field from './Field'\n\nReactDOM.render(\n    <Field />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}